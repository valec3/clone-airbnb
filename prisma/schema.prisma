// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  lastName String
  email String @unique
  password String?
  birthday DateTime?
  hashedPassword String?
  emailVerified DateTime?
  imageSrc String?
  favoriteIds String[] @default([])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  accounts Account[]
  listings Listing[]
  reservations Reservation[]
}

model Account{
  id String @id @default(cuid()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  provider String
  type String
  
  providerAccountId String
  refreshToken String? @db.String
  accessToken String? @db.String
  accessTokenExpires Int?
  tokenType String? @db.String
  scope String? @db.String
  idToken String? @db.String
  sessionState String? @db.String

  user User @relation(fields:[userId], references:[id], onDelete: Cascade)
  @@unique([provider, providerAccountId])
}

model Listing{
  id String @id @default(cuid()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  title String
  description String
  imageSrc String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  category String
  roomCount Int
  bathroomCount Int
  guestCount Int
  location String
  price Int


  user User @relation(fields:[userId], references:[id], onDelete: Cascade)
  reservations Reservation[]
}

model Reservation{
  id String @id @default(cuid()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  listingId String @db.ObjectId
  startDate DateTime
  endDate DateTime
  totalPrice Int
  paymentIntentId String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields:[userId], references:[id], onDelete: Cascade)
  listing Listing @relation(fields:[listingId], references:[id], onDelete: Cascade)
}